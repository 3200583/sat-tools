// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SatParameters.proto

#include "SatParameters.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

class SatParametersDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SatParameters>
      _instance;
} _SatParameters_default_instance_;
namespace protobuf_SatParameters_2eproto {
static void InitDefaultsSatParameters() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_SatParameters_default_instance_;
    new (ptr) ::SatParameters();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SatParameters::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SatParameters =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSatParameters}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_SatParameters.base);
}

::google::protobuf::Metadata file_level_metadata[1];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SatParameters, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SatParameters, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SatParameters, preferred_variable_order_),
  0,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 6, sizeof(::SatParameters)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_SatParameters_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "SatParameters.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\023SatParameters.proto\"\244\001\n\rSatParameters\022"
      "H\n\030preferred_variable_order\030\001 \001(\0162\034.SatP"
      "arameters.VariableOrder:\010IN_ORDER\"I\n\rVar"
      "iableOrder\022\014\n\010IN_ORDER\020\000\022\025\n\021IN_REVERSER_"
      "ORDER\020\001\022\023\n\017IN_RANDOM_ORDER\020\002"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 188);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "SatParameters.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_SatParameters_2eproto
const ::google::protobuf::EnumDescriptor* SatParameters_VariableOrder_descriptor() {
  protobuf_SatParameters_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_SatParameters_2eproto::file_level_enum_descriptors[0];
}
bool SatParameters_VariableOrder_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SatParameters_VariableOrder SatParameters::IN_ORDER;
const SatParameters_VariableOrder SatParameters::IN_REVERSER_ORDER;
const SatParameters_VariableOrder SatParameters::IN_RANDOM_ORDER;
const SatParameters_VariableOrder SatParameters::VariableOrder_MIN;
const SatParameters_VariableOrder SatParameters::VariableOrder_MAX;
const int SatParameters::VariableOrder_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void SatParameters::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SatParameters::kPreferredVariableOrderFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SatParameters::SatParameters()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_SatParameters_2eproto::scc_info_SatParameters.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:SatParameters)
}
SatParameters::SatParameters(const SatParameters& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  preferred_variable_order_ = from.preferred_variable_order_;
  // @@protoc_insertion_point(copy_constructor:SatParameters)
}

void SatParameters::SharedCtor() {
  preferred_variable_order_ = 0;
}

SatParameters::~SatParameters() {
  // @@protoc_insertion_point(destructor:SatParameters)
  SharedDtor();
}

void SatParameters::SharedDtor() {
}

void SatParameters::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SatParameters::descriptor() {
  ::protobuf_SatParameters_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_SatParameters_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SatParameters& SatParameters::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_SatParameters_2eproto::scc_info_SatParameters.base);
  return *internal_default_instance();
}


void SatParameters::Clear() {
// @@protoc_insertion_point(message_clear_start:SatParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  preferred_variable_order_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SatParameters::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SatParameters)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .SatParameters.VariableOrder preferred_variable_order = 1 [default = IN_ORDER];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::SatParameters_VariableOrder_IsValid(value)) {
            set_preferred_variable_order(static_cast< ::SatParameters_VariableOrder >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SatParameters)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SatParameters)
  return false;
#undef DO_
}

void SatParameters::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SatParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .SatParameters.VariableOrder preferred_variable_order = 1 [default = IN_ORDER];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->preferred_variable_order(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SatParameters)
}

::google::protobuf::uint8* SatParameters::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SatParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .SatParameters.VariableOrder preferred_variable_order = 1 [default = IN_ORDER];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->preferred_variable_order(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SatParameters)
  return target;
}

size_t SatParameters::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SatParameters)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional .SatParameters.VariableOrder preferred_variable_order = 1 [default = IN_ORDER];
  if (has_preferred_variable_order()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->preferred_variable_order());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SatParameters::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SatParameters)
  GOOGLE_DCHECK_NE(&from, this);
  const SatParameters* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SatParameters>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SatParameters)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SatParameters)
    MergeFrom(*source);
  }
}

void SatParameters::MergeFrom(const SatParameters& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SatParameters)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_preferred_variable_order()) {
    set_preferred_variable_order(from.preferred_variable_order());
  }
}

void SatParameters::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SatParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SatParameters::CopyFrom(const SatParameters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SatParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SatParameters::IsInitialized() const {
  return true;
}

void SatParameters::Swap(SatParameters* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SatParameters::InternalSwap(SatParameters* other) {
  using std::swap;
  swap(preferred_variable_order_, other->preferred_variable_order_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SatParameters::GetMetadata() const {
  protobuf_SatParameters_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_SatParameters_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::SatParameters* Arena::CreateMaybeMessage< ::SatParameters >(Arena* arena) {
  return Arena::CreateInternal< ::SatParameters >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
