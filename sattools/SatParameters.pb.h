// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SatParameters.proto

#ifndef PROTOBUF_INCLUDED_SatParameters_2eproto
#define PROTOBUF_INCLUDED_SatParameters_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_SatParameters_2eproto 

namespace protobuf_SatParameters_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_SatParameters_2eproto
class SatParameters;
class SatParametersDefaultTypeInternal;
extern SatParametersDefaultTypeInternal _SatParameters_default_instance_;
namespace google {
namespace protobuf {
template<> ::SatParameters* Arena::CreateMaybeMessage<::SatParameters>(Arena*);
}  // namespace protobuf
}  // namespace google

enum SatParameters_VariableOrder {
  SatParameters_VariableOrder_IN_ORDER = 0,
  SatParameters_VariableOrder_IN_REVERSER_ORDER = 1,
  SatParameters_VariableOrder_IN_RANDOM_ORDER = 2
};
bool SatParameters_VariableOrder_IsValid(int value);
const SatParameters_VariableOrder SatParameters_VariableOrder_VariableOrder_MIN = SatParameters_VariableOrder_IN_ORDER;
const SatParameters_VariableOrder SatParameters_VariableOrder_VariableOrder_MAX = SatParameters_VariableOrder_IN_RANDOM_ORDER;
const int SatParameters_VariableOrder_VariableOrder_ARRAYSIZE = SatParameters_VariableOrder_VariableOrder_MAX + 1;

const ::google::protobuf::EnumDescriptor* SatParameters_VariableOrder_descriptor();
inline const ::std::string& SatParameters_VariableOrder_Name(SatParameters_VariableOrder value) {
  return ::google::protobuf::internal::NameOfEnum(
    SatParameters_VariableOrder_descriptor(), value);
}
inline bool SatParameters_VariableOrder_Parse(
    const ::std::string& name, SatParameters_VariableOrder* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SatParameters_VariableOrder>(
    SatParameters_VariableOrder_descriptor(), name, value);
}
// ===================================================================

class SatParameters : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SatParameters) */ {
 public:
  SatParameters();
  virtual ~SatParameters();

  SatParameters(const SatParameters& from);

  inline SatParameters& operator=(const SatParameters& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SatParameters(SatParameters&& from) noexcept
    : SatParameters() {
    *this = ::std::move(from);
  }

  inline SatParameters& operator=(SatParameters&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SatParameters& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SatParameters* internal_default_instance() {
    return reinterpret_cast<const SatParameters*>(
               &_SatParameters_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(SatParameters* other);
  friend void swap(SatParameters& a, SatParameters& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SatParameters* New() const final {
    return CreateMaybeMessage<SatParameters>(NULL);
  }

  SatParameters* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SatParameters>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SatParameters& from);
  void MergeFrom(const SatParameters& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SatParameters* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef SatParameters_VariableOrder VariableOrder;
  static const VariableOrder IN_ORDER =
    SatParameters_VariableOrder_IN_ORDER;
  static const VariableOrder IN_REVERSER_ORDER =
    SatParameters_VariableOrder_IN_REVERSER_ORDER;
  static const VariableOrder IN_RANDOM_ORDER =
    SatParameters_VariableOrder_IN_RANDOM_ORDER;
  static inline bool VariableOrder_IsValid(int value) {
    return SatParameters_VariableOrder_IsValid(value);
  }
  static const VariableOrder VariableOrder_MIN =
    SatParameters_VariableOrder_VariableOrder_MIN;
  static const VariableOrder VariableOrder_MAX =
    SatParameters_VariableOrder_VariableOrder_MAX;
  static const int VariableOrder_ARRAYSIZE =
    SatParameters_VariableOrder_VariableOrder_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  VariableOrder_descriptor() {
    return SatParameters_VariableOrder_descriptor();
  }
  static inline const ::std::string& VariableOrder_Name(VariableOrder value) {
    return SatParameters_VariableOrder_Name(value);
  }
  static inline bool VariableOrder_Parse(const ::std::string& name,
      VariableOrder* value) {
    return SatParameters_VariableOrder_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .SatParameters.VariableOrder preferred_variable_order = 1 [default = IN_ORDER];
  bool has_preferred_variable_order() const;
  void clear_preferred_variable_order();
  static const int kPreferredVariableOrderFieldNumber = 1;
  ::SatParameters_VariableOrder preferred_variable_order() const;
  void set_preferred_variable_order(::SatParameters_VariableOrder value);

  // @@protoc_insertion_point(class_scope:SatParameters)
 private:
  void set_has_preferred_variable_order();
  void clear_has_preferred_variable_order();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  int preferred_variable_order_;
  friend struct ::protobuf_SatParameters_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// SatParameters

// optional .SatParameters.VariableOrder preferred_variable_order = 1 [default = IN_ORDER];
inline bool SatParameters::has_preferred_variable_order() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SatParameters::set_has_preferred_variable_order() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SatParameters::clear_has_preferred_variable_order() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SatParameters::clear_preferred_variable_order() {
  preferred_variable_order_ = 0;
  clear_has_preferred_variable_order();
}
inline ::SatParameters_VariableOrder SatParameters::preferred_variable_order() const {
  // @@protoc_insertion_point(field_get:SatParameters.preferred_variable_order)
  return static_cast< ::SatParameters_VariableOrder >(preferred_variable_order_);
}
inline void SatParameters::set_preferred_variable_order(::SatParameters_VariableOrder value) {
  assert(::SatParameters_VariableOrder_IsValid(value));
  set_has_preferred_variable_order();
  preferred_variable_order_ = value;
  // @@protoc_insertion_point(field_set:SatParameters.preferred_variable_order)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::SatParameters_VariableOrder> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SatParameters_VariableOrder>() {
  return ::SatParameters_VariableOrder_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_SatParameters_2eproto
